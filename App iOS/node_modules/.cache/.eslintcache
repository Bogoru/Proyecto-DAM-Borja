[{"/Users/borjagomezruiz/Desktop/Sensae/src/service-worker.ts":"1","/Users/borjagomezruiz/Desktop/Sensae/src/index.tsx":"2","/Users/borjagomezruiz/Desktop/Sensae/src/reportWebVitals.ts":"3","/Users/borjagomezruiz/Desktop/Sensae/src/serviceWorkerRegistration.ts":"4","/Users/borjagomezruiz/Desktop/Sensae/src/App.tsx":"5","/Users/borjagomezruiz/Desktop/Sensae/src/pages/Home.tsx":"6","/Users/borjagomezruiz/Desktop/Sensae/src/components/ExploreContainer.tsx":"7","/Users/borjagomezruiz/Desktop/Sensae/src/pages/Movimiento.jsx":"8","/Users/borjagomezruiz/Desktop/Sensae/src/pages/Sillones.js":"9","/Users/borjagomezruiz/Desktop/Sensae/src/pages/Posiciones.js":"10","/Users/Misana/Desktop/Sensae/src/service-worker.ts":"11","/Users/Misana/Desktop/Sensae/src/index.tsx":"12","/Users/Misana/Desktop/Sensae/src/serviceWorkerRegistration.ts":"13","/Users/Misana/Desktop/Sensae/src/reportWebVitals.ts":"14","/Users/Misana/Desktop/Sensae/src/App.tsx":"15","/Users/Misana/Desktop/Sensae/src/pages/Sillones.js":"16","/Users/Misana/Desktop/Sensae/src/pages/Posiciones.js":"17","/Users/Misana/Desktop/Sensae/src/pages/Home.tsx":"18","/Users/Misana/Desktop/Sensae/src/pages/Movimiento.jsx":"19","/Users/Misana/Desktop/Borja/src/service-worker.ts":"20","/Users/Misana/Desktop/Borja/src/index.tsx":"21","/Users/Misana/Desktop/Borja/src/reportWebVitals.ts":"22","/Users/Misana/Desktop/Borja/src/serviceWorkerRegistration.ts":"23","/Users/Misana/Desktop/Borja/src/App.jsx":"24","/Users/Misana/Desktop/Borja/src/pages/Dispositivos.js":"25","/Users/Misana/Desktop/Borja/src/pages/Home.tsx":"26","/Users/Misana/Desktop/Borja/src/pages/Temporizador.jsx":"27","/Users/Misana/Desktop/Borja/src/pages/Menu.jsx":"28","/Users/Misana/Desktop/Borja/src/pages/Movimiento.jsx":"29","/Users/Misana/Desktop/Borja/src/pages/Lluvia.jsx":"30"},{"size":2968,"mtime":1682086228000,"results":"31","hashOfConfig":"32"},{"size":858,"mtime":1682086228000,"results":"33","hashOfConfig":"32"},{"size":425,"mtime":1682086228000,"results":"34","hashOfConfig":"32"},{"size":5256,"mtime":1682086228000,"results":"35","hashOfConfig":"32"},{"size":1571,"mtime":1683268723287,"results":"36","hashOfConfig":"32"},{"size":1780,"mtime":1684227792430,"results":"37","hashOfConfig":"32"},{"size":409,"mtime":1682086228000,"results":"38","hashOfConfig":"32"},{"size":11857,"mtime":1684150627076,"results":"39","hashOfConfig":"32"},{"size":6222,"mtime":1684153324713,"results":"40","hashOfConfig":"32"},{"size":7400,"mtime":1684150612974,"results":"41","hashOfConfig":"32"},{"size":2968,"mtime":1682086228000,"results":"42","hashOfConfig":"43"},{"size":858,"mtime":1682086228000,"results":"44","hashOfConfig":"43"},{"size":5256,"mtime":1682086228000,"results":"45","hashOfConfig":"43"},{"size":425,"mtime":1682086228000,"results":"46","hashOfConfig":"43"},{"size":1571,"mtime":1683268723287,"results":"47","hashOfConfig":"43"},{"size":6222,"mtime":1684153324713,"results":"48","hashOfConfig":"43"},{"size":7400,"mtime":1684150612000,"results":"49","hashOfConfig":"43"},{"size":1780,"mtime":1684394040269,"results":"50","hashOfConfig":"43"},{"size":13856,"mtime":1684401035750,"results":"51","hashOfConfig":"43"},{"size":2968,"mtime":1682086228000,"results":"52","hashOfConfig":"53"},{"size":858,"mtime":1682086228000,"results":"54","hashOfConfig":"53"},{"size":425,"mtime":1682086228000,"results":"55","hashOfConfig":"53"},{"size":5256,"mtime":1682086228000,"results":"56","hashOfConfig":"53"},{"size":1870,"mtime":1684753348192,"results":"57","hashOfConfig":"53"},{"size":5406,"mtime":1686129443139,"results":"58","hashOfConfig":"53"},{"size":501,"mtime":1685706552431,"results":"59","hashOfConfig":"53"},{"size":4406,"mtime":1686134966119,"results":"60","hashOfConfig":"53"},{"size":2951,"mtime":1685706786379,"results":"61","hashOfConfig":"53"},{"size":4998,"mtime":1685707051585,"results":"62","hashOfConfig":"53"},{"size":4226,"mtime":1685707029661,"results":"63","hashOfConfig":"53"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1mfnli1",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"bb2529",{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"121"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"nc5bhx",{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"166"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"166"},"/Users/borjagomezruiz/Desktop/Sensae/src/service-worker.ts",[],[],[],"/Users/borjagomezruiz/Desktop/Sensae/src/index.tsx",[],[],[],"/Users/borjagomezruiz/Desktop/Sensae/src/reportWebVitals.ts",[],[],"/Users/borjagomezruiz/Desktop/Sensae/src/serviceWorkerRegistration.ts",[],[],"/Users/borjagomezruiz/Desktop/Sensae/src/App.tsx",[],[],"/Users/borjagomezruiz/Desktop/Sensae/src/pages/Home.tsx",["175"],[],"import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonIcon, IonFooter } from '@ionic/react';\nimport { informationCircleOutline } from 'ionicons/icons';\nimport { ReactSVG } from 'react-svg';\n\nimport './Home.css';\nimport sillon from '../imagenes/sillon.svg';\nimport copyright from '../imagenes/Copyright.svg';\nimport logoFama from '../imagenes/LogoFama.svg';\n\nconst Home: React.FC = () => {\n\n  const camb ='aaa';\n\n  const openWeb = () => {\n    window.open('https://www.fama.es/sensae', '_blank', 'location=yes');\n  };\n\n  const pasarPagina = () => {\n    window.location.href = '/Sillones';\n  };\n\n  return (\n    <IonPage>\n          <IonHeader>\n            <IonToolbar className='toolbar'>\n              <IonTitle className='titulo'>\n                <div className='icon-container'>\n                  <span className='texto2'>Sensae</span>\n                  <IonIcon icon={informationCircleOutline} className='buttonInfo' onClick={openWeb}></IonIcon>\n                </div>\n              </IonTitle>\n            </IonToolbar>\n          </IonHeader>\n      <IonContent fullscreen>\n\n        <h2 className='subTitulo'>Este app es para controlar movimientos de tu sillón Fama. Para evitar errores, lo mejor es identificar cada sillón.</h2>\n\n        <ReactSVG src={sillon} className='imagenSillon'></ReactSVG>\n\n        <button className='buttonPonNombre' onClick={pasarPagina}>Pon un nombre a tu sillon</button>\n\n      </IonContent>\n\n        <IonFooter>\n          <IonToolbar>\n            <ReactSVG src={logoFama} className='imagenLogo'></ReactSVG>\n            <h4 className='version'>v0.10.5</h4>\n            <ReactSVG src={copyright} className='imagenCopy'></ReactSVG>        \n          </IonToolbar>\n        </IonFooter>\n        \n    </IonPage>\n  );\n};\n\nexport default Home;","/Users/borjagomezruiz/Desktop/Sensae/src/components/ExploreContainer.tsx",[],[],"/Users/borjagomezruiz/Desktop/Sensae/src/pages/Movimiento.jsx",["176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],[],"import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonIcon, IonButton, IonImg, IonFooter } from '@ionic/react';\r\nimport { informationCircleOutline } from 'ionicons/icons';\r\nimport { BleClient, numbersToDataView } from '@capacitor-community/bluetooth-le';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Home.css';\r\n\r\nimport { radioButtonOffOutline, chevronBackOutline } from 'ionicons/icons';\r\n\r\n\r\nimport { BLE } from '@ionic-native/ble';\r\n\r\nimport { ReactSVG } from 'react-svg';\r\n\r\nimport Una_Mano from '../imagenes/A_una_mano.svg';\r\nimport Una_Mano_Selected from '../imagenes/A_Una_Mano_Selected.svg';\r\nimport Dos_Manos from '../imagenes/A_dos_manos.svg';\r\nimport Dos_Manos_Selected from '../imagenes/A_Dos_Manos_Selected.svg';\r\nimport Linea from '../imagenes/Linea_seperacion.svg';\r\nimport Abrir from '../imagenes/Abrir.svg';\r\nimport Cerrar from '../imagenes/Cerrar.svg';\r\nimport Bloquear from '../imagenes/Bloquear.svg';\r\nimport Desbloquear from '../imagenes/Desbloquear.svg';\r\nimport Posiciones_preestablecidas from '../imagenes/Posiciones_preestablecidas.svg';\r\n\r\nfunction Sillones(){\r\n  \r\n\r\n  const [bloqueado, setBloqueado] = useState(false);\r\n  const [imageBloq, setImageBloq] = useState(Bloquear);\r\n  \r\n  const [manos, setManos] = useState(false);\r\n  const [imgUnaMano, setImgUnaMano] = useState(Una_Mano_Selected);\r\n  const [imgDosManos, setImgDosManos] = useState(Dos_Manos);\r\n\r\n  const [device, setDevice] = useState(null);\r\n\r\n  const [presionado, setPresionado] = useState(false);\r\n\r\n  const HEART_RATE_SERVICE = '143fda37-5a0e-4ebb-9a3c-fc0e7625f086';\r\n  const CHAR_MODE_UUID = \"24f56a5b-8943-47b4-aab7-96a3ef03469d\"\r\n  const CHAR_DIR_UUID = \"ceba6cdc-8e39-42f1-a8b8-fca3832014fe\"\r\n  const CHAR_LOCK_UUID = \"dd163077-eec7-4473-901d-5c336ecc453e\"\r\n\r\n  const openWeb = () => {\r\n    window.open('https://www.fama.es/sensae', '_blank', 'location=yes');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n\r\n      BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\r\n        async peripherals => {\r\n          console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\r\n          for(let i = 0; i < peripherals.length; i++) {\r\n            console.log(peripherals[i].id);\r\n          }\r\n\r\n          if(peripherals.length <= 0){\r\n            window.location.href ='/Sillones';\r\n          }\r\n\r\n        },\r\n        error => {\r\n          console.log('Error al buscar dispositivos conectados: ' + error);\r\n        }\r\n      );\r\n\r\n    }, 2000);\r\n\r\n  }, []);\r\n\r\n  async function unaMano(){\r\n    console.log(\"CAMBIO A UNA MANO\");\r\n\r\n    try {\r\n\r\n      if(BleClient.getConnectedDevices([]) === 0){\r\n      \r\n        window.location.href ='/Sillones';\r\n  \r\n      }else{\r\n  \r\n        BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\r\n          async peripherals => {\r\n            console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\r\n            for(let i = 0; i < peripherals.length; i++) {\r\n              console.log(peripherals[i].id);\r\n              await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_MODE_UUID, numbersToDataView([1]));\r\n              console.log('Ecrito correctamente');\r\n            }\r\n          },\r\n          error => {\r\n            console.log('Error al buscar dispositivos conectados: ' + error);\r\n          }\r\n        );\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    if(manos == true){\r\n      setManos(false);\r\n      setImgUnaMano(Una_Mano_Selected);\r\n      setImgDosManos(Dos_Manos);\r\n    }\r\n  }\r\n\r\n  async function dosManos(){\r\n    console.log(\"CAMBIO A DOS MANOS\");\r\n\r\n    try {\r\n\r\n      if(BleClient.getConnectedDevices([]) === 0){\r\n      \r\n        window.location.href ='/Sillones';\r\n  \r\n      }else{\r\n  \r\n        BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\r\n          async peripherals => {\r\n            console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\r\n            for(let i = 0; i < peripherals.length; i++) {\r\n              console.log(peripherals[i].id);\r\n              await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_MODE_UUID, numbersToDataView([2]));\r\n              console.log('Ecrito correctamente');\r\n            }\r\n          },\r\n          error => {\r\n            console.log('Error al buscar dispositivos conectados: ' + error);\r\n          }\r\n        );\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    if(manos == false){\r\n      setManos(true);\r\n      setImgDosManos(Dos_Manos_Selected)\r\n      setImgUnaMano(Una_Mano)\r\n    }\r\n  }\r\n\r\n  const abrir = async () => {\r\n    setPresionado(true);\r\n    try {\r\n\r\n      if(BleClient.getConnectedDevices([]) === 0){\r\n      \r\n        window.location.href ='/Sillones';\r\n  \r\n      }else{\r\n  \r\n        BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\r\n          async peripherals => {\r\n            console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\r\n            for(let i = 0; i < peripherals.length; i++) {\r\n              console.log(peripherals[i].id);\r\n              await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_DIR_UUID, numbersToDataView([1]));\r\n              console.log('Ecrito correctamente');\r\n            }\r\n          },\r\n          error => {\r\n            console.log('Error al buscar dispositivos conectados: ' + error);\r\n          }\r\n        );\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const cerrar = async () => {\r\n    setPresionado(true);\r\n    try {\r\n\r\n      if(BleClient.getConnectedDevices([]) === 0){\r\n      \r\n        window.location.href ='/Sillones';\r\n  \r\n      }else{\r\n  \r\n        BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\r\n          async peripherals => {\r\n            console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\r\n            for(let i = 0; i < peripherals.length; i++) {\r\n              console.log(peripherals[i].id);\r\n              await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_DIR_UUID, numbersToDataView([-1]));\r\n              console.log('Ecrito correctamente');\r\n            }\r\n          },\r\n          error => {\r\n            console.log('Error al buscar dispositivos conectados: ' + error);\r\n          }\r\n        );\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const parar = async () => {\r\n    setPresionado(false);\r\n    try {\r\n\r\n      if(BleClient.getConnectedDevices([]) === 0){\r\n      \r\n        window.location.href ='/Sillones';\r\n  \r\n      }else{\r\n  \r\n        BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\r\n          async peripherals => {\r\n            console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\r\n            for(let i = 0; i < peripherals.length; i++) {\r\n              console.log(peripherals[i].id);\r\n              await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_DIR_UUID, numbersToDataView([0]));\r\n              console.log('Ecrito correctamente');\r\n            }\r\n          },\r\n          error => {\r\n            console.log('Error al buscar dispositivos conectados: ' + error);\r\n          }\r\n        );\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async function Bbloquear(){\r\n    if(bloqueado == true){\r\n      console.log(\"DESBLOQUEADO\");\r\n      setBloqueado(false);\r\n      setImageBloq(Bloquear);\r\n\r\n      try {\r\n\r\n        if(BleClient.getDevices([]) === 0){\r\n        \r\n          window.location.href ='/Sillones';\r\n    \r\n        }else{\r\n\r\n\r\n          BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\r\n            async peripherals => {\r\n              console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\r\n              for(let i = 0; i < peripherals.length; i++) {\r\n                console.log(peripherals[i].id);\r\n                await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_LOCK_UUID, numbersToDataView([0]));\r\n                console.log('Ecrito correctamente');\r\n              }\r\n            },\r\n            error => {\r\n              console.log('Error al buscar dispositivos conectados: ' + error);\r\n            }\r\n          );\r\n\r\n        }\r\n  \r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n    }else{\r\n      console.log(\"BLOQUEADO\");\r\n      setBloqueado(true);\r\n      setImageBloq(Desbloquear);\r\n\r\n      try {\r\n\r\n        if(BleClient.getDevices([]) === 0){\r\n        \r\n          window.location.href ='/Sillones';\r\n    \r\n        }else{\r\n\r\n          BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\r\n            async peripherals => {\r\n              console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\r\n              for(let i = 0; i < peripherals.length; i++) {\r\n                console.log(peripherals[i].id);\r\n                await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_LOCK_UUID, numbersToDataView([1]));\r\n                console.log('Ecrito correctamente');\r\n              }\r\n            },\r\n            error => {\r\n              console.log('Error al buscar dispositivos conectados: ' + error);\r\n            }\r\n          );\r\n\r\n        }\r\n  \r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  function posiciones(){\r\n    window.location.href ='/Posiciones';\r\n  }\r\n\r\n  function back(){\r\n\r\n    BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\r\n      async peripherals => {\r\n        console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\r\n        for(let i = 0; i < peripherals.length; i++) {\r\n          console.log(peripherals[i].id);\r\n          await BleClient.disconnect(peripherals[i].id);\r\n          console.log('Desconectado correctamente');\r\n        }\r\n      },\r\n      error => {\r\n        console.log('Error al buscar dispositivos conectados: ' + error);\r\n      }\r\n    );\r\n\r\n    window.location.href = '/Sillones'\r\n\r\n  }\r\n\r\n  function closed(){\r\n    window.location.href = '/Home'\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <IonHeader>\r\n        <IonToolbar className='toolbar'>\r\n          <IonTitle className='titulo2'>\r\n            <div className='icon-container'>\r\n              <IonIcon icon={chevronBackOutline} className='iconBack' onClick={back}></IonIcon>\r\n              <span className='texto'>Sillón Conectado</span>\r\n              <IonIcon icon={informationCircleOutline} className='buttonInfo' onClick={openWeb}></IonIcon>\r\n            </div>\r\n          </IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n\r\n      <IonContent fullscreen>\r\n\r\n    <h3 className='encabezados'>Modo de control</h3>\r\n        <button onPointerDown={unaMano} className='prueba'><img src={imgUnaMano} className='imagenesManos'></img></button>\r\n        <button onPointerDown={dosManos} className='prueba'><img src={imgDosManos} className='imagenesManos'></img></button>\r\n    \r\n        <ReactSVG src={Linea} className='imagenLinea'></ReactSVG>\r\n\r\n    <h3 className='encabezados'>Control Manual</h3>\r\n    <div class=\"contenedor-imagenes\">\r\n        <ReactSVG src={Abrir} className='imegenesAbriryCerrar' onPointerDown={abrir} onPointerUp={parar} ></ReactSVG>\r\n        <ReactSVG src={Cerrar} className='imegenesAbriryCerrar'onPointerDown={cerrar} onPointerUp={parar}></ReactSVG>\r\n    </div>\r\n        <ReactSVG src={Linea} className='imagenLinea'></ReactSVG>\r\n\r\n        <button className='prueba' onPointerDown={Bbloquear}><img src={imageBloq} className='imagenBloquear'></img></button>\r\n        <ReactSVG src={Posiciones_preestablecidas} className='imagenPosiciones' onClick={posiciones}></ReactSVG>\r\n\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Sillones;\r\n\r\n",[],"/Users/borjagomezruiz/Desktop/Sensae/src/pages/Sillones.js",["191","192","193","194","195","196","197","198","199","200","201","202","203"],[],"import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonIcon, IonButton, IonList, IonItem, IonFooter, IonAlert, IonInput, IonTextarea } from '@ionic/react';\r\nimport { radioButtonOffOutline, chevronBackOutline, informationCircleOutline, createOutline } from 'ionicons/icons';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { BleClient, ScanMode, numbersToDataView } from '@capacitor-community/bluetooth-le';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ReactSVG } from 'react-svg';\r\n\r\nimport './Home.css';\r\nimport SillonTocarBrazo from '../imagenes/SillonTocarBrazo.svg';\r\nimport copyright from '../imagenes/Copyright.svg';\r\nimport logoFama from '../imagenes/LogoFama.svg';\r\nimport Bocadillo from '../imagenes/Bocadillo.svg';\r\n\r\nconst HEART_RATE_SERVICE = '143fda37-5a0e-4ebb-9a3c-fc0e7625f086';\r\nconst CHAR_DIR_UUID = \"ceba6cdc-8e39-42f1-a8b8-fca3832014fe\"\r\n\r\nfunction Sillones(){\r\n\r\n  const [scanning, setScanning] = useState(false);\r\n  const [scanResults, setScanResults] = useState([]);\r\n\r\n  const [showImage, setShowImage] = useState(false);\r\n  const [connectedDeviceId, setConnectedDeviceId] = useState(null);\r\n  const [deviceName, setDeviceName] = useState(null);\r\n\r\n  const [inputValue, setInputValue] = useState(null);\r\n  const [id1, setId1] = useState(null);\r\n\r\n  const [showImage1, setShowImage1] = useState(true);\r\n  const [showImage2, setShowImage2] = useState(true);\r\n\r\n  const guardar = (event) => {\r\n    \r\n    setInputValue(event.target.value);\r\n\r\n    if(inputValue == null){\r\n\r\n      ocultar2();\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n\r\n    localStorage.setItem(id1, inputValue);\r\n    setDeviceName(inputValue);\r\n    ocultar();\r\n    ocultar2();\r\n    setInputValue(null);\r\n    \r\n  };\r\n\r\n  function buscarNombre(id){\r\n\r\n    setDeviceName(localStorage.getItem(id));\r\n    console.log('ESTE ES EL NOMBRE DEL DEVICE: ', deviceName);\r\n    console.log('Este es el id', id);\r\n    setId1(id);\r\n\r\n  }\r\n\r\n  const openWeb = () => {\r\n    window.open('https://www.fama.es/sensae', '_blank', 'location=yes');\r\n  };\r\n\r\n  useEffect(() => {\r\n    BleClient.initialize();\r\n    startScan();\r\n  }, []);\r\n\r\n  async function doScan(callback) {\r\n    const device = await BleClient.requestLEScan({\r\n      services: [HEART_RATE_SERVICE],\r\n      scanMode: ScanMode.SCAN_MODE_LOW_LATENCY,\r\n    }, callback);\r\n  }\r\n\r\n  function startScan() {\r\n    setScanResults([]);\r\n    setScanning(true);\r\n    doScan(result => setScanResults(scanResults => [...scanResults, result]))\r\n      .finally(() => setScanning(false));\r\n  }\r\n\r\n  async function connectToDevice(deviceId) {\r\n    try {\r\n\r\n      await BleClient.connect(deviceId, (deviceId) => onDisconnect(deviceId));\r\n      setConnectedDeviceId(deviceId);\r\n\r\n      if(BleClient.isEnabled){\r\n        BleClient.stopLEScan();\r\n        window.location.href = '/Movimiento';\r\n      }else{\r\n        recargar();\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      recargar();\r\n    }\r\n  }\r\n\r\n  async function onDisconnect(deviceId) {\r\n    \r\n    console.log(`Device disconnected: ${deviceId}`);\r\n    setConnectedDeviceId(null);\r\n    // Eliminar el dispositivo de la lista de resultados de escaneo\r\n    setScanResults(scanResults => {\r\n      const filteredResults = scanResults.filter(r => r.device.deviceId !== deviceId);\r\n      return filteredResults;\r\n    });\r\n\r\n\r\n  }\r\n\r\n  function Mostrar(){\r\n\r\n    if(scanResults == 0){\r\n      setShowImage(false);\r\n      return(\r\n\r\n            <IonContent fullscreen>\r\n                \r\n                {!showImage && <ReactSVG src={Bocadillo} className='imagenBocadillo'></ReactSVG>}\r\n                {!showImage && <ReactSVG src={SillonTocarBrazo} className='imagenSillon'></ReactSVG>}\r\n\r\n            </IonContent>\r\n        )\r\n    }else{\r\n      setShowImage(true);\r\n\r\n      return(\r\n        \r\n        <IonContent fullscreen>\r\n            \r\n            {!showImage && <ReactSVG src={Bocadillo} className='imagenBocadillo'></ReactSVG>}\r\n            {!showImage && <ReactSVG src={SillonTocarBrazo} className='imagenSillon'></ReactSVG>}\r\n\r\n            <IonList className='Lista' lines=\"none\">\r\n              {scanResults.map((result) => (\r\n                <IonItem className='Item' key={result.device.deviceId}>\r\n                  {buscarNombre(result.device.deviceId)}\r\n                  <button className='ButtonDispositivos' onClick={() => connectToDevice(result.device.deviceId)}>{deviceName ?? 'FAMA ' + result.device.deviceId.substr(-4)}</button>\r\n                  <IonIcon icon={createOutline} onClick={ocultar} className='iconoEdit'></IonIcon>\r\n                </IonItem>\r\n              ))}\r\n\r\n                {!showImage1 &&  <IonInput label='Nombre Del Sillon' type=\"text\" value={inputValue} onIonChange={guardar} className='input'/>}\r\n                {!showImage2 && <IonButton onPointerDown={hola} onClick={handleButtonClick} className='buttonGuardar'>Guardar</IonButton>}\r\n\r\n          </IonList>\r\n\r\n        </IonContent>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  function hola(){\r\n    console.log('hola');\r\n  }\r\n\r\n  function ocultar2(){\r\n    setShowImage2(!showImage2);\r\n  }\r\n\r\n  function ocultar(){\r\n    setShowImage1(!showImage1);\r\n  }\r\n\r\n  function recargar(){\r\n    window.location.reload();\r\n  }\r\n\r\n  function back(){\r\n\r\n    window.location.href = '/Home'\r\n\r\n  }\r\n\r\n  function closed(){\r\n\r\n    window.location.href = '/Home'\r\n\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <IonHeader>\r\n        <IonToolbar className='toolbar'>\r\n          <IonTitle className='titulo2'>\r\n            <div className='icon-container'>\r\n              <IonIcon icon={chevronBackOutline} className='iconBack' onClick={back}></IonIcon>\r\n              <span className='texto'>Selecciona tu sillón</span>\r\n              <IonIcon icon={informationCircleOutline} className='buttonInfo' onClick={openWeb}></IonIcon>\r\n            </div>\r\n          </IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <Mostrar/>\r\n\r\n      <IonFooter>\r\n        <IonToolbar>\r\n          <ReactSVG src={logoFama} className='imagenLogo'></ReactSVG>\r\n          <ReactSVG src={copyright} className='imagenCopy'></ReactSVG>  \r\n        </IonToolbar>\r\n      </IonFooter>\r\n\r\n    </IonPage>\r\n  );\r\n  \r\n};\r\n\r\nexport default Sillones;\r\n","/Users/borjagomezruiz/Desktop/Sensae/src/pages/Posiciones.js",["204","205","206","207","208","209"],[],"import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonIcon, IonButton, IonFooter } from '@ionic/react';\nimport { informationCircleOutline, radioButtonOffOutline, chevronBackOutline } from 'ionicons/icons';\nimport React, { useState, useEffect } from 'react';\nimport { BleClient, numbersToDataView } from '@capacitor-community/bluetooth-le';\n\nimport './Home.css';\n\nimport { BLE } from '@ionic-native/ble';\n\nimport { ReactSVG } from 'react-svg';\n\n\nimport Titulo_Posiciones from '../imagenes/Titulo_Posiciones.svg';\nimport Modo_TV from '../imagenes/Modo_TV.svg';\nimport Modo_siesta from '../imagenes/Modo_siesta.svg';\nimport Modo_lectura from '../imagenes/Modo_lectura.svg';\nimport Posición_cerrado from '../imagenes/Posición_cerrado.svg';\n\nconst HEART_RATE_SERVICE = '143fda37-5a0e-4ebb-9a3c-fc0e7625f086';\nconst CHAR_DIR_UUID = \"ceba6cdc-8e39-42f1-a8b8-fca3832014fe\"\n\nfunction Posiciones(){\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n\n        BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n          async peripherals => {\n            console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n            for(let i = 0; i < peripherals.length; i++) {\n              console.log(peripherals[i].id);\n            }\n\n            if(peripherals.length <= 0){\n              window.location.href ='/Sillones';\n            }\n\n          },\n          error => {\n            console.log('Error al buscar dispositivos conectados: ' + error);\n          }\n        );\n\n      }, 2000);\n\n      }, []);\n\n    const openWeb = () => {\n        window.open('https://www.fama.es/sensae', '_blank', 'location=yes');\n      };\n\n  \n    function parar(){\n\n        try {\n\n            BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n                async peripherals => {\n                  console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n                  for(let i = 0; i < peripherals.length; i++) {\n                    console.log(peripherals[i].id);\n                    await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_DIR_UUID, numbersToDataView([0]));\n                    console.log('Ecrito correctamente');\n\n                  }\n                },\n                error => {\n                  console.log('Error al buscar dispositivos conectados: ' + error);\n                }\n              );\n\n                \n        } catch (error) {\n            console.log(error)\n        }\n\n    }      \n\n    function modoTv(){\n\n        try {\n\n            BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n                async peripherals => {\n                  console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n                  for(let i = 0; i < peripherals.length; i++) {\n                    console.log(peripherals[i].id);\n                    await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_DIR_UUID, numbersToDataView([1]));\n                    console.log('Ecrito correctamente');\n\n                    setTimeout(parar, 7000);\n\n                  }\n                },\n                error => {\n                  console.log('Error al buscar dispositivos conectados: ' + error);\n                }\n              );\n\n                \n        } catch (error) {\n            console.log(error)\n        }\n\n    }  \n\n    function modoLectura(){\n    \n        try {\n\n            BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n                async peripherals => {\n                  console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n                  for(let i = 0; i < peripherals.length; i++) {\n                    console.log(peripherals[i].id);\n                    await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_DIR_UUID, numbersToDataView([1]));\n                    console.log('Ecrito correctamente');\n\n                    setTimeout(parar, 3000);\n\n                  }\n                },\n                error => {\n                  console.log('Error al buscar dispositivos conectados: ' + error);\n                }\n              );\n\n                \n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    function modoCerrado(){\n\n        try {\n\n            BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n                async peripherals => {\n                  console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n                  for(let i = 0; i < peripherals.length; i++) {\n                    console.log(peripherals[i].id);\n                    await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_DIR_UUID, numbersToDataView([-1]));\n                    console.log('Ecrito correctamente');\n\n                    setTimeout(parar, 13000);\n\n                  }\n                },\n                error => {\n                  console.log('Error al buscar dispositivos conectados: ' + error);\n                }\n              );\n\n                \n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    function modoSiesta(){\n\n        try {\n\n            BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n                async peripherals => {\n                  console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n                  for(let i = 0; i < peripherals.length; i++) {\n                    console.log(peripherals[i].id);\n                    await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, CHAR_DIR_UUID, numbersToDataView([1]));\n                    console.log('Ecrito correctamente');\n\n                    setTimeout(parar, 13000);\n\n                  }\n                },\n                error => {\n                  console.log('Error al buscar dispositivos conectados: ' + error);\n                }\n              );\n\n                \n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    function back(){\n  \n      window.location.href = '/Movimiento'\n  \n    }\n  \n    function closed(){\n      window.location.href = '/Home'\n    }\n    \n\n    return (\n        <IonPage>\n\n          <IonHeader>\n            <IonToolbar className='toolbar'>\n              <IonTitle className='titulo2'>\n                <div className='icon-container'>\n                  <IonIcon icon={chevronBackOutline} className='iconBack' onClick={back}></IonIcon>\n                  <span className='texto'>Sillón Conectado</span>\n                  <IonIcon icon={informationCircleOutline} className='buttonInfo' onClick={openWeb}></IonIcon>\n                </div>\n              </IonTitle>\n            </IonToolbar>\n          </IonHeader>\n\n          <IonContent fullscreen>\n            \n            <ReactSVG src={Titulo_Posiciones} className='TituloPosiciones' ></ReactSVG>\n            <ReactSVG src={Modo_lectura} className='imagenesPosiciones' onClick={modoLectura}></ReactSVG>\n            <ReactSVG src={Modo_TV} className='imagenesPosiciones' onClick={modoTv}></ReactSVG>\n            <ReactSVG src={Modo_siesta} className='imagenesPosiciones' onClick={modoSiesta}></ReactSVG>\n            <ReactSVG src={Posición_cerrado} className='imagenesPosiciones' onClick={modoCerrado}></ReactSVG>\n\n          </IonContent>\n        </IonPage>\n      );\n\n}\n\nexport default Posiciones;","/Users/Misana/Desktop/Sensae/src/service-worker.ts",[],[],[],"/Users/Misana/Desktop/Sensae/src/index.tsx",[],[],[],"/Users/Misana/Desktop/Sensae/src/serviceWorkerRegistration.ts",[],[],"/Users/Misana/Desktop/Sensae/src/reportWebVitals.ts",[],[],"/Users/Misana/Desktop/Sensae/src/App.tsx",[],[],"/Users/Misana/Desktop/Sensae/src/pages/Sillones.js",["210","211","212","213","214","215","216","217","218","219","220","221","222"],[],[],"/Users/Misana/Desktop/Sensae/src/pages/Posiciones.js",["223","224","225","226","227","228"],[],"/Users/Misana/Desktop/Sensae/src/pages/Home.tsx",["229"],[],"/Users/Misana/Desktop/Sensae/src/pages/Movimiento.jsx",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248"],[],"/Users/Misana/Desktop/Borja/src/service-worker.ts",[],[],[],"/Users/Misana/Desktop/Borja/src/index.tsx",[],[],[],"/Users/Misana/Desktop/Borja/src/reportWebVitals.ts",[],[],"/Users/Misana/Desktop/Borja/src/serviceWorkerRegistration.ts",[],[],"/Users/Misana/Desktop/Borja/src/App.jsx",[],[],[],"/Users/Misana/Desktop/Borja/src/pages/Dispositivos.js",["249","250","251","252","253","254","255","256"],[],"import { IonContent, IonHeader, IonPage, IonInput, IonToolbar, IonIcon, IonList, IonItem, IonFooter, IonButton, IonLabel } from '@ionic/react';\r\nimport { createOutline } from 'ionicons/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BleClient, ScanMode } from '@capacitor-community/bluetooth-le';\r\nimport { ReactSVG } from 'react-svg';\r\n\r\nimport './Home.css';\r\n\r\nimport titulobuscar from '../imagenes/titulobuscar.svg'\r\nimport toldo from '../imagenes/toldo.svg'\r\nimport footer from '../imagenes/footer.svg'\r\nimport buscar from '../imagenes/buscar.svg'\r\n\r\nconst HEART_RATE_SERVICE = '0000abcd-0000-1000-8000-00805f9b34fb';\r\n\r\nfunction Sillones(){\r\n\r\n  const [scanning, setScanning] = useState(false);\r\n  const [scanResults, setScanResults] = useState([]);\r\n\r\n  const [showImage, setShowImage] = useState(false);\r\n  const [connectedDeviceId, setConnectedDeviceId] = useState(null);\r\n  const [deviceName, setDeviceName] = useState(null);\r\n\r\n  const [showImage1, setShowImage1] = useState(true);\r\n  const [showImage2, setShowImage2] = useState(true);\r\n  const [inputValue, setInputValue] = useState(null);\r\n  const [id1, setId1] = useState(null);\r\n\r\n  const [toldos, setToldos] = useState(null);\r\n\r\n  useEffect(() => {\r\n    BleClient.initialize();\r\n    setToldos(false);\r\n  }, []);\r\n\r\n\r\n  const guardar = (event) => {\r\n    \r\n    setInputValue(event.target.value);\r\n\r\n    if(inputValue == null){\r\n\r\n      ocultar2();\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n\r\n    localStorage.setItem(id1, inputValue);\r\n    setDeviceName(inputValue);\r\n    ocultar();\r\n    ocultar2();\r\n    setInputValue(null);\r\n    \r\n  };\r\n\r\n  function buscarNombre(id){\r\n\r\n    setDeviceName(localStorage.getItem(id));\r\n    console.log('ESTE ES EL NOMBRE DEL DEVICE: ', deviceName);\r\n    console.log('Este es el id', id);\r\n    setId1(id);\r\n\r\n  }\r\n\r\n  function ocultar2(){\r\n    setShowImage2(!showImage2);\r\n  }\r\n\r\n  function ocultar(){\r\n    setShowImage1(!showImage1);\r\n  }\r\n\r\n  async function doScan(callback) {\r\n    const device = await BleClient.requestLEScan({\r\n      services: [HEART_RATE_SERVICE],\r\n      scanMode: ScanMode.SCAN_MODE_LOW_LATENCY,\r\n    }, callback);\r\n  }\r\n\r\n  function startScan() {\r\n    setToldos(true);\r\n    setScanResults([]);\r\n    setScanning(true);\r\n    doScan(result => setScanResults(scanResults => [...scanResults, result]))\r\n      .finally(() => setScanning(false));\r\n  }\r\n\r\n  async function connectToDevice(deviceId) {\r\n    try {\r\n\r\n      await BleClient.connect(deviceId, (deviceId) => onDisconnect(deviceId));\r\n      setConnectedDeviceId(deviceId);\r\n\r\n      if(BleClient.isEnabled){\r\n        BleClient.stopLEScan();\r\n        window.location.href = '/Menu';\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      recargar();\r\n    }\r\n  }\r\n\r\n  async function onDisconnect(deviceId) {\r\n    \r\n    console.log(`Device disconnected: ${deviceId}`);\r\n    setConnectedDeviceId(null);\r\n    setScanResults(scanResults => {\r\n      const filteredResults = scanResults.filter(r => r.device.deviceId !== deviceId);\r\n      return filteredResults;\r\n    });\r\n\r\n\r\n  }\r\n\r\n  function Mostrar(){\r\n\r\n    if(scanResults == 0){\r\n\r\n      if(toldos == false){\r\n        setShowImage(false);\r\n        return(\r\n  \r\n          <IonContent fullscreen className='fondo'>\r\n            \r\n            <ReactSVG src={buscar} className='svgBuscar' onClick={startScan}></ReactSVG>\r\n  \r\n            <ReactSVG src={toldo} className='svgToldo'></ReactSVG>\r\n  \r\n          </IonContent>\r\n          )\r\n      }else if(toldos == true){\r\n        setShowImage(false);\r\n        return(\r\n  \r\n          <IonContent fullscreen className='fondo'>\r\n            \r\n            <ReactSVG src={buscar} className='svgBuscar' onClick={startScan}></ReactSVG>\r\n  \r\n            <h2 className='textoNinguno'>Ningún Dispositivo Disponible</h2>\r\n\r\n            <ReactSVG src={toldo} className='svgToldo'></ReactSVG>\r\n  \r\n          </IonContent>\r\n          )\r\n      }\r\n    \r\n    }else{\r\n      setShowImage(true);\r\n      setToldos(false);\r\n      return(\r\n        <IonContent fullscreen className='fondo'>\r\n\r\n          <IonList className='Lista' lines=\"none\">\r\n              {scanResults.map((result) => (\r\n                <IonItem className='Item' key={result.device.deviceId}>\r\n                  {buscarNombre(result.device.deviceId)}\r\n                  <button className='ButtonDispositivos' onClick={() => connectToDevice(result.device.deviceId)}>{deviceName ?? result.device.name}</button>\r\n                  <IonIcon icon={createOutline} onClick={ocultar}></IonIcon>\r\n                </IonItem>\r\n                \r\n              ))}\r\n\r\n              {!showImage1 &&  <IonInput label='Nuevo Nombre: ' type=\"text\" value={inputValue} onIonChange={guardar} className='input'/>}\r\n              {!showImage2 && <IonButton onClick={handleButtonClick} className='buttonGuardar'>Guardar</IonButton>}\r\n\r\n          </IonList>\r\n\r\n        </IonContent>\r\n      )\r\n    }\r\n  }\r\n\r\n  function recargar(){\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader className='fondo'>\r\n        <IonToolbar  className='fondo'>\r\n          <ReactSVG src={titulobuscar} className='svg'></ReactSVG>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <Mostrar/>\r\n\r\n      <IonFooter>\r\n          <ReactSVG src={footer} className='svg'></ReactSVG>\r\n      </IonFooter>\r\n\r\n    </IonPage>\r\n  );\r\n  \r\n};\r\n\r\nexport default Sillones;\r\n","/Users/Misana/Desktop/Borja/src/pages/Home.tsx",["257"],[],"import { IonContent, IonPage } from '@ionic/react';\nimport './Home.css';\nimport Logo from '../imagenes/Logo.png';\n\nfunction Home () {\n\n  function cambiarVentana(){\n    window.location.href = '/Dispositivos';  \n  }\n\n  setTimeout(cambiarVentana, 2000);\n\n  return (\n    <IonPage>\n      <IonContent fullscreen className='fondo'>\n        <div className='contenedor'>        \n          <img src={Logo} className='Logo'></img>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n\n",[],"/Users/Misana/Desktop/Borja/src/pages/Temporizador.jsx",["258","259"],[],"import { IonButton, IonContent, IonToolbar, IonHeader, IonLabel, IonPage, IonDatetime } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport { BleClient, textToDataView } from '@capacitor-community/bluetooth-le';\nimport { BLE } from '@ionic-native/ble';\n\nimport './Temporizador.css';\n\nimport TituloTiempo from '../imagenes/titulotiempo.svg'\nimport Volver from '../imagenes/volver.svg'\n\nconst HEART_RATE_SERVICE = '0000abcd-0000-1000-8000-00805f9b34fb';\nconst WRITE_CHARACTERISTIC2 = \"00004321-0000-1000-8000-00805F9B34FB\"\n\nfunction Home () {\n\n  const [currentTime, setCurrentTime] = useState('');\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    console.log(selectedDate);\n    const interval = setInterval(() => {\n\n      BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n        async peripherals => {\n          console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n          for(let i = 0; i < peripherals.length; i++) {\n            console.log(peripherals[i].id);\n          }\n\n          if(peripherals.length <= 0){\n            window.location.href ='/Dispositivos';\n          }\n\n        },\n        error => {\n          console.log('Error al buscar dispositivos conectados: ' + error);\n        }\n      );\n\n    }, 2000);\n\n    const getCurrentTime = () => {\n      const date = new Date();\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      const seconds = date.getSeconds().toString().padStart(2, '0');\n      const timeStr = `${hours}:${minutes}:${seconds}`;\n      setCurrentTime(timeStr);\n    };\n    getCurrentTime();\n\n    const interval2 = setInterval(() => {\n      getCurrentTime();\n    }, 30000);\n\n    return () => {\n      clearInterval(interval2);\n    };\n\n  }, []);\n\n    const cambios = (event) => {\n        setSelectedDate(event.target.value);\n      };\n    \n    const abrir = () => {\n      BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n        async peripherals => {\n          console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n          for(let i = 0; i < peripherals.length; i++) {\n            console.log(peripherals[i].id);\n            await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, WRITE_CHARACTERISTIC2, textToDataView(selectedDate.slice(11, 16) + \" \" + currentTime + \" 1\"));\n          }\n        },\n        error => {\n          console.log('Error al buscar dispositivos conectados: ' + error);\n        }\n      );\n    };  \n\n    const cerrar = () => {\n      BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n        async peripherals => {\n          console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n          for(let i = 0; i < peripherals.length; i++) {\n            console.log(peripherals[i].id);\n            await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, WRITE_CHARACTERISTIC2, textToDataView(selectedDate.slice(11, 16) + \" \" + currentTime + \" 0\"));\n          }\n        },\n        error => {\n          console.log('Error al buscar dispositivos conectados: ' + error);\n        }\n      );    };  \n\n  function back(){\n    window.location.href ='/Menu';\n  }\n\n  function Mostrar(){\n\n    if(selectedDate != null){\n      return(\n        <div className='contenedor-buttons'>\n          <IonButton onClick={abrir} className='buttons' color='#797979'>Abrir</IonButton>\n          <IonButton onClick={cerrar} className='buttons' color=\"var(--color-personalizado)\">Cerrar</IonButton>\n        </div>\n      )\n    }else{\n      return(\n        <h1 className='h2'>Ninguna hora seleccionada</h1>\n      )\n    }\n\n  }\n\n  return (\n    <IonPage>\n        <IonHeader className='fondoTiempo'>\n          <IonToolbar className='fondoTiempo'>\n            <ReactSVG src={TituloTiempo}></ReactSVG>\n          </IonToolbar>\n        </IonHeader>\n\n      <IonContent fullscreen className='fondoTiempo'>\n\n        <IonLabel className='tituloSeleccionar'>Seleccione una hora: </IonLabel>\n\n        <IonDatetime presentation='time' value={selectedDate} onIonChange={cambios} className='timer'></IonDatetime>\n\n        <Mostrar/>\n\n        <ReactSVG src={Volver} className='imgAtras2' onClick={back}></ReactSVG>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;","/Users/Misana/Desktop/Borja/src/pages/Menu.jsx",["260"],[],"import { IonContent, IonPage} from '@ionic/react';\nimport React, { useEffect } from 'react';\nimport { BleClient } from '@capacitor-community/bluetooth-le';\nimport { ReactSVG } from 'react-svg';\nimport { BLE } from '@ionic-native/ble';\n\nimport './Menu.css';\nimport Mover from '../imagenes/mover.svg'\nimport Lluvia from '../imagenes/lluvia.svg'\nimport Reloj from '../imagenes/reloj.svg'\nimport Volver from '../imagenes/volver.svg'\n\nfunction Menu(){\n\n    const HEART_RATE_SERVICE = '0000abcd-0000-1000-8000-00805f9b34fb';\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n    \n          BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n            async peripherals => {\n              console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n              for(let i = 0; i < peripherals.length; i++) {\n                console.log(peripherals[i].id);\n              }\n    \n              if(peripherals.length <= 0){\n                window.location.href ='/Dispositivos';\n              }\n    \n            },\n            error => {\n              console.log('Error al buscar dispositivos conectados: ' + error);\n            }\n          );\n    \n        }, 1000);\n    \n      }, []);\n\n    function irMovimiento(){\n        window.location.href ='/Movimiento';\n    }\n\n    function irLluvia(){\n        window.location.href ='/Lluvia';\n    }\n\n    function irReloj(){\n        window.location.href ='/Temporizador';\n    }\n\n    async function desconectar() {\n        try {\n    \n            BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n                async peripherals => {\n                  console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n                  for(let i = 0; i < peripherals.length; i++) {\n                    console.log(peripherals[i].id);\n                    await BleClient.disconnect(peripherals[i].id);\n                    window.location.href ='/Dispositivos';\n                }\n                },\n                error => {\n                  console.log('Error al buscar dispositivos conectados: ' + error);\n                }\n              );\n          \n        } catch (error) {\n          console.error('Error al desconectar dispositivos:', error);\n          window.location.href ='/Home';\n    \n        }\n      }\n    \n    return(\n        <IonPage>\n            <IonContent fullscreen className='contenido'>\n\n                <div className='contenedor-imagenes2'> \n                    <ReactSVG src={Mover} className='img' onClick={irMovimiento}></ReactSVG>\n                    <ReactSVG src={Reloj} className='img' onClick={irReloj}></ReactSVG>\n                    <ReactSVG src={Lluvia} className='img' onClick={irLluvia}></ReactSVG>\n                </div>   \n\n                <ReactSVG src={Volver} className='img2' onClick={desconectar}></ReactSVG>\n\n            </IonContent>\n        </IonPage>\n\n    );\n}\n\nexport default Menu;",[],"/Users/Misana/Desktop/Borja/src/pages/Movimiento.jsx",["261"],[],"import { IonContent, IonHeader, IonPage, IonToolbar} from '@ionic/react';\nimport { useEffect } from 'react';\nimport { BleClient, numbersToDataView } from '@capacitor-community/bluetooth-le';\nimport './Movimiento.css';\nimport { ReactSVG } from 'react-svg';\n\nimport { BLE } from '@ionic-native/ble';\nimport headerControl from '../imagenes/headercontrol.svg'\nimport abrirTodo from '../imagenes/abrirtodo.svg'\nimport cerrarTodo from '../imagenes/cerrartodo.svg'\nimport abrir1 from '../imagenes/abrir.svg'\nimport cerrar1 from '../imagenes/cerrar.svg'\nimport barra from '../imagenes/barra.svg'\nimport Volver from '../imagenes/volver.svg'\n\nfunction Home () {\n\n  const HEART_RATE_SERVICE = '0000abcd-0000-1000-8000-00805f9b34fb';\n  const WRITE_CHARACTERISTIC = \"00001234-0000-1000-8000-00805F9B34FB\";\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n\n      BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n        async peripherals => {\n          console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n          for(let i = 0; i < peripherals.length; i++) {\n            console.log(peripherals[i].id);\n          }\n\n          if(peripherals.length <= 0){\n            window.location.href ='/Dispositivos';\n          }\n\n        },\n        error => {\n          console.log('Error al buscar dispositivos conectados: ' + error);\n        }\n      );\n\n    }, 1000);\n\n  }, []);\n\n  async function abrir(){\n\n    try {\n\n        if(BleClient.getConnectedDevices([]) === 0){\n        \n          window.location.href ='/Dispositivos';\n    \n        }else{\n    \n          BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n            async peripherals => {\n              console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n              for(let i = 0; i < peripherals.length; i++) {\n                console.log(peripherals[i].id);\n                await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, WRITE_CHARACTERISTIC, numbersToDataView([1]));\n              }\n            },\n            error => {\n              console.log('Error al buscar dispositivos conectados: ' + error);\n            }\n          );\n  \n        }\n  \n      } catch (error) {\n        console.error(error);\n      }\n\n  }\n\n  async function cerrar(){\n\n    try {\n\n        if(BleClient.getConnectedDevices([]) === 0){\n        \n          window.location.href ='/Dispositivos';\n    \n        }else{\n    \n          BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n            async peripherals => {\n              console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n              for(let i = 0; i < peripherals.length; i++) {\n                console.log(peripherals[i].id);\n                await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, WRITE_CHARACTERISTIC, numbersToDataView([2]));\n              }\n            },\n            error => {\n              console.log('Error al buscar dispositivos conectados: ' + error);\n            }\n          );\n  \n        }\n  \n      } catch (error) {\n        console.error(error);\n      }\n\n  }\n\n  async function parar(){\n\n    try {\n\n        if(BleClient.getConnectedDevices([]) === 0){\n        \n          window.location.href ='/Dispositivos';\n    \n        }else{\n    \n          BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n            async peripherals => {\n              console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n              for(let i = 0; i < peripherals.length; i++) {\n                console.log(peripherals[i].id);\n                await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, WRITE_CHARACTERISTIC, numbersToDataView([3]));\n              }\n            },\n            error => {\n              console.log('Error al buscar dispositivos conectados: ' + error);\n            }\n          );\n  \n        }\n  \n      } catch (error) {\n        console.error(error);\n      }\n\n  }\n\n  function back(){\n    window.location.href ='/Menu';\n  }\n\n  return (\n    <IonPage>\n      <IonHeader className='fondo2'>\n        <IonToolbar className='fondo2'>\n            <ReactSVG src={headerControl} className='svg'></ReactSVG>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen className='fondo2' scrollY=\"false\">\n\n            <ReactSVG src={abrirTodo} onClick={abrir} className='svg1'></ReactSVG>\n            <ReactSVG src={cerrarTodo} onClick={cerrar} className='svg1'></ReactSVG>\n\n            <ReactSVG src={barra} className='svg1'></ReactSVG>\n\n            <ReactSVG src={abrir1} onPointerDown={abrir} onPointerUp={parar} className='svg1'></ReactSVG>\n            <ReactSVG src={cerrar1} onPointerDown={cerrar} onPointerUp={parar} className='svg1'></ReactSVG>\n\n            <ReactSVG src={barra} className='svg1'></ReactSVG>\n\n            <ReactSVG src={Volver} className='imgAtras' onClick={back}></ReactSVG>\n\n      </IonContent>\n    </IonPage>\n  );\n\n};\n\nexport default Home;\n","/Users/Misana/Desktop/Borja/src/pages/Lluvia.jsx",["262","263","264","265","266"],[],"import { IonContent, IonHeader, IonCheckbox, IonPage, IonToolbar } from '@ionic/react';\nimport './Lluvia.css';\nimport { ReactSVG } from 'react-svg';\nimport { BleClient, numbersToDataView } from '@capacitor-community/bluetooth-le';\nimport { BLE } from '@ionic-native/ble';\nimport { useEffect, useState } from 'react';\n\n\nimport Lluvia from '../imagenes/titulolluvia.svg';\nimport Volver from '../imagenes/volver.svg'\n\nfunction Home () {\n\n  const HEART_RATE_SERVICE = '0000abcd-0000-1000-8000-00805f9b34fb';\n  const READ_CHARACTERISTIC = \"00001111-0000-1000-8000-00805F9B34FB\";\n  const WRITE_CHARACTERISTIC = \"00001111-0000-1000-8000-00805F9B34FB\";\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n\n      BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n        async peripherals => {\n          console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n          for(let i = 0; i < peripherals.length; i++) {\n            console.log(peripherals[i].id);\n          }\n\n          if(peripherals.length <= 0){\n            window.location.href ='/Dispositivos';\n          }\n\n        },\n        error => {\n          console.log('Error al buscar dispositivos conectados: ' + error);\n        }\n      );\n\n    }, 1000);\n\n    setTimeout(comprobar, 20);\n\n    function comprobar(){\n      BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n        async peripherals => {\n          console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n          for(let i = 0; i < peripherals.length; i++) {\n            console.log(peripherals[i].id);\n            const estado = await BleClient.read(peripherals[i].id, HEART_RATE_SERVICE, READ_CHARACTERISTIC);\n            if(estado.getUint8(0) == 0){\n              setIsChecked(false)\n            }else if(estado.getUint8(0) == 1){\n              setIsChecked(true)\n            }\n          }\n        },\n        error => {\n          console.log('Error al buscar dispositivos conectados: ' + error);\n        }\n      );\n    }\n\n  }, []);\n\n  const guardar = (event) => {\n    \n    setIsChecked(event.target.value);\n\n    if(isChecked == false){\n      setIsChecked(true);\n\n      BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n        async peripherals => {\n          console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n          for(let i = 0; i < peripherals.length; i++) {\n            console.log(peripherals[i].id);\n            await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, WRITE_CHARACTERISTIC, numbersToDataView([1]));\n          }\n        },\n        error => {\n          console.log('Error al buscar dispositivos conectados: ' + error);\n        }\n      );\n\n    }else if(isChecked == true){\n      setIsChecked(false);\n      console.log(\"Seteado false\");\n\n      BLE.connectedPeripheralsWithServices([HEART_RATE_SERVICE]).then(\n        async peripherals => {\n          console.log('Dispositivos conectados con el servicio ' + HEART_RATE_SERVICE + ':');\n          for(let i = 0; i < peripherals.length; i++) {\n            console.log(peripherals[i].id);\n            await BleClient.write(peripherals[i].id, HEART_RATE_SERVICE, WRITE_CHARACTERISTIC, numbersToDataView([0]));\n          }\n        },\n        error => {\n          console.log('Error al buscar dispositivos conectados: ' + error);\n        }\n      );\n      \n    }\n\n  }\n\n    function back(){\n      window.location.href ='/Menu';\n    }\n    \n  return (\n    <IonPage>\n\n        <IonHeader className='fondoLluvia'>\n          <IonToolbar className='fondoLluvia'>\n            <ReactSVG src={Lluvia}></ReactSVG>\n          </IonToolbar>\n        </IonHeader>\n\n\n      <IonContent fullscreen className='fondo'>\n\n        <h2 className='texto'>Con nuestra función de control basada en la lluvia, puedes decidir cómo quieres que tus dispositivos respondan cuando detecten lluvia.</h2>\n        <IonCheckbox className='checkbox' checked={isChecked} onIonChange={guardar}>Cerrar en caso de lluvia</IonCheckbox>\n        <ReactSVG src={Volver} className='imgAtras3' onClick={back}></ReactSVG>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;\n\n",{"ruleId":"267","severity":1,"message":"268","line":12,"column":9,"nodeType":"269","messageId":"270","endLine":12,"endColumn":13},{"ruleId":"271","severity":1,"message":"272","line":1,"column":73,"nodeType":"269","messageId":"270","endLine":1,"endColumn":82},{"ruleId":"271","severity":1,"message":"273","line":1,"column":84,"nodeType":"269","messageId":"270","endLine":1,"endColumn":90},{"ruleId":"271","severity":1,"message":"274","line":1,"column":92,"nodeType":"269","messageId":"270","endLine":1,"endColumn":101},{"ruleId":"271","severity":1,"message":"275","line":7,"column":10,"nodeType":"269","messageId":"270","endLine":7,"endColumn":31},{"ruleId":"271","severity":1,"message":"276","line":35,"column":10,"nodeType":"269","messageId":"270","endLine":35,"endColumn":16},{"ruleId":"271","severity":1,"message":"277","line":35,"column":18,"nodeType":"269","messageId":"270","endLine":35,"endColumn":27},{"ruleId":"271","severity":1,"message":"278","line":37,"column":10,"nodeType":"269","messageId":"270","endLine":37,"endColumn":20},{"ruleId":"271","severity":1,"message":"279","line":49,"column":11,"nodeType":"269","messageId":"270","endLine":49,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":103,"column":14,"nodeType":"282","messageId":"283","endLine":103,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":140,"column":14,"nodeType":"282","messageId":"283","endLine":140,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":238,"column":18,"nodeType":"282","messageId":"283","endLine":238,"endColumn":20},{"ruleId":"271","severity":1,"message":"284","line":333,"column":12,"nodeType":"269","messageId":"270","endLine":333,"endColumn":18},{"ruleId":"285","severity":1,"message":"286","line":356,"column":60,"nodeType":"287","endLine":356,"endColumn":108},{"ruleId":"285","severity":1,"message":"286","line":357,"column":61,"nodeType":"287","endLine":357,"endColumn":110},{"ruleId":"285","severity":1,"message":"286","line":368,"column":62,"nodeType":"287","endLine":368,"endColumn":110},{"ruleId":"271","severity":1,"message":"288","line":1,"column":113,"nodeType":"269","messageId":"270","endLine":1,"endColumn":121},{"ruleId":"271","severity":1,"message":"289","line":1,"column":133,"nodeType":"269","messageId":"270","endLine":1,"endColumn":144},{"ruleId":"271","severity":1,"message":"275","line":2,"column":10,"nodeType":"269","messageId":"270","endLine":2,"endColumn":31},{"ruleId":"271","severity":1,"message":"290","line":3,"column":38,"nodeType":"269","messageId":"270","endLine":3,"endColumn":44},{"ruleId":"271","severity":1,"message":"291","line":4,"column":31,"nodeType":"269","messageId":"270","endLine":4,"endColumn":48},{"ruleId":"271","severity":1,"message":"292","line":5,"column":10,"nodeType":"269","messageId":"270","endLine":5,"endColumn":20},{"ruleId":"271","severity":1,"message":"293","line":15,"column":7,"nodeType":"269","messageId":"270","endLine":15,"endColumn":20},{"ruleId":"271","severity":1,"message":"294","line":19,"column":10,"nodeType":"269","messageId":"270","endLine":19,"endColumn":18},{"ruleId":"271","severity":1,"message":"295","line":23,"column":10,"nodeType":"269","messageId":"270","endLine":23,"endColumn":27},{"ruleId":"296","severity":1,"message":"297","line":70,"column":6,"nodeType":"298","endLine":70,"endColumn":8,"suggestions":"299"},{"ruleId":"271","severity":1,"message":"276","line":73,"column":11,"nodeType":"269","messageId":"270","endLine":73,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":120,"column":20,"nodeType":"282","messageId":"283","endLine":120,"endColumn":22},{"ruleId":"271","severity":1,"message":"284","line":183,"column":12,"nodeType":"269","messageId":"270","endLine":183,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":1,"column":73,"nodeType":"269","messageId":"270","endLine":1,"endColumn":82},{"ruleId":"271","severity":1,"message":"274","line":1,"column":84,"nodeType":"269","messageId":"270","endLine":1,"endColumn":93},{"ruleId":"271","severity":1,"message":"275","line":2,"column":36,"nodeType":"269","messageId":"270","endLine":2,"endColumn":57},{"ruleId":"271","severity":1,"message":"300","line":3,"column":17,"nodeType":"269","messageId":"270","endLine":3,"endColumn":25},{"ruleId":"271","severity":1,"message":"279","line":25,"column":13,"nodeType":"269","messageId":"270","endLine":25,"endColumn":21},{"ruleId":"271","severity":1,"message":"284","line":197,"column":14,"nodeType":"269","messageId":"270","endLine":197,"endColumn":20},{"ruleId":"271","severity":1,"message":"288","line":1,"column":113,"nodeType":"269","messageId":"270","endLine":1,"endColumn":121},{"ruleId":"271","severity":1,"message":"289","line":1,"column":133,"nodeType":"269","messageId":"270","endLine":1,"endColumn":144},{"ruleId":"271","severity":1,"message":"275","line":2,"column":10,"nodeType":"269","messageId":"270","endLine":2,"endColumn":31},{"ruleId":"271","severity":1,"message":"290","line":3,"column":38,"nodeType":"269","messageId":"270","endLine":3,"endColumn":44},{"ruleId":"271","severity":1,"message":"291","line":4,"column":31,"nodeType":"269","messageId":"270","endLine":4,"endColumn":48},{"ruleId":"271","severity":1,"message":"292","line":5,"column":10,"nodeType":"269","messageId":"270","endLine":5,"endColumn":20},{"ruleId":"271","severity":1,"message":"293","line":15,"column":7,"nodeType":"269","messageId":"270","endLine":15,"endColumn":20},{"ruleId":"271","severity":1,"message":"294","line":19,"column":10,"nodeType":"269","messageId":"270","endLine":19,"endColumn":18},{"ruleId":"271","severity":1,"message":"295","line":23,"column":10,"nodeType":"269","messageId":"270","endLine":23,"endColumn":27},{"ruleId":"296","severity":1,"message":"297","line":70,"column":6,"nodeType":"298","endLine":70,"endColumn":8,"suggestions":"301"},{"ruleId":"271","severity":1,"message":"276","line":73,"column":11,"nodeType":"269","messageId":"270","endLine":73,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":120,"column":20,"nodeType":"282","messageId":"283","endLine":120,"endColumn":22},{"ruleId":"271","severity":1,"message":"284","line":183,"column":12,"nodeType":"269","messageId":"270","endLine":183,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":1,"column":73,"nodeType":"269","messageId":"270","endLine":1,"endColumn":82},{"ruleId":"271","severity":1,"message":"274","line":1,"column":84,"nodeType":"269","messageId":"270","endLine":1,"endColumn":93},{"ruleId":"271","severity":1,"message":"275","line":2,"column":36,"nodeType":"269","messageId":"270","endLine":2,"endColumn":57},{"ruleId":"271","severity":1,"message":"300","line":3,"column":17,"nodeType":"269","messageId":"270","endLine":3,"endColumn":25},{"ruleId":"271","severity":1,"message":"279","line":25,"column":13,"nodeType":"269","messageId":"270","endLine":25,"endColumn":21},{"ruleId":"271","severity":1,"message":"284","line":197,"column":14,"nodeType":"269","messageId":"270","endLine":197,"endColumn":20},{"ruleId":"267","severity":1,"message":"268","line":12,"column":9,"nodeType":"269","messageId":"270","endLine":12,"endColumn":13},{"ruleId":"271","severity":1,"message":"272","line":1,"column":73,"nodeType":"269","messageId":"270","endLine":1,"endColumn":82},{"ruleId":"271","severity":1,"message":"273","line":1,"column":84,"nodeType":"269","messageId":"270","endLine":1,"endColumn":90},{"ruleId":"271","severity":1,"message":"274","line":1,"column":92,"nodeType":"269","messageId":"270","endLine":1,"endColumn":101},{"ruleId":"271","severity":1,"message":"275","line":7,"column":10,"nodeType":"269","messageId":"270","endLine":7,"endColumn":31},{"ruleId":"271","severity":1,"message":"276","line":34,"column":10,"nodeType":"269","messageId":"270","endLine":34,"endColumn":16},{"ruleId":"271","severity":1,"message":"277","line":34,"column":18,"nodeType":"269","messageId":"270","endLine":34,"endColumn":27},{"ruleId":"271","severity":1,"message":"278","line":36,"column":10,"nodeType":"269","messageId":"270","endLine":36,"endColumn":20},{"ruleId":"280","severity":1,"message":"281","line":72,"column":35,"nodeType":"282","messageId":"283","endLine":72,"endColumn":37},{"ruleId":"280","severity":1,"message":"281","line":77,"column":41,"nodeType":"282","messageId":"283","endLine":77,"endColumn":43},{"ruleId":"280","severity":1,"message":"281","line":86,"column":36,"nodeType":"282","messageId":"283","endLine":86,"endColumn":38},{"ruleId":"280","severity":1,"message":"281","line":89,"column":42,"nodeType":"282","messageId":"283","endLine":89,"endColumn":44},{"ruleId":"271","severity":1,"message":"279","line":102,"column":11,"nodeType":"269","messageId":"270","endLine":102,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":156,"column":14,"nodeType":"282","messageId":"283","endLine":156,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":193,"column":14,"nodeType":"282","messageId":"283","endLine":193,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":291,"column":18,"nodeType":"282","messageId":"283","endLine":291,"endColumn":20},{"ruleId":"271","severity":1,"message":"284","line":386,"column":12,"nodeType":"269","messageId":"270","endLine":386,"endColumn":18},{"ruleId":"285","severity":1,"message":"286","line":409,"column":60,"nodeType":"287","endLine":409,"endColumn":108},{"ruleId":"285","severity":1,"message":"286","line":410,"column":61,"nodeType":"287","endLine":410,"endColumn":110},{"ruleId":"285","severity":1,"message":"286","line":421,"column":62,"nodeType":"287","endLine":421,"endColumn":110},{"ruleId":"271","severity":1,"message":"302","line":1,"column":113,"nodeType":"269","messageId":"270","endLine":1,"endColumn":121},{"ruleId":"271","severity":1,"message":"294","line":18,"column":10,"nodeType":"269","messageId":"270","endLine":18,"endColumn":18},{"ruleId":"271","severity":1,"message":"303","line":21,"column":10,"nodeType":"269","messageId":"270","endLine":21,"endColumn":19},{"ruleId":"271","severity":1,"message":"295","line":22,"column":10,"nodeType":"269","messageId":"270","endLine":22,"endColumn":27},{"ruleId":"271","severity":1,"message":"276","line":78,"column":11,"nodeType":"269","messageId":"270","endLine":78,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":123,"column":20,"nodeType":"282","messageId":"283","endLine":123,"endColumn":22},{"ruleId":"280","severity":1,"message":"281","line":125,"column":17,"nodeType":"282","messageId":"283","endLine":125,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":137,"column":23,"nodeType":"282","messageId":"283","endLine":137,"endColumn":25},{"ruleId":"285","severity":1,"message":"286","line":17,"column":11,"nodeType":"287","endLine":17,"endColumn":44},{"ruleId":"271","severity":1,"message":"279","line":22,"column":11,"nodeType":"269","messageId":"270","endLine":22,"endColumn":19},{"ruleId":"296","severity":1,"message":"304","line":61,"column":6,"nodeType":"298","endLine":61,"endColumn":8,"suggestions":"305"},{"ruleId":"271","severity":1,"message":"279","line":18,"column":15,"nodeType":"269","messageId":"270","endLine":18,"endColumn":23},{"ruleId":"271","severity":1,"message":"279","line":22,"column":11,"nodeType":"269","messageId":"270","endLine":22,"endColumn":19},{"ruleId":"271","severity":1,"message":"279","line":21,"column":11,"nodeType":"269","messageId":"270","endLine":21,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":51,"column":35,"nodeType":"282","messageId":"283","endLine":51,"endColumn":37},{"ruleId":"280","severity":1,"message":"281","line":53,"column":41,"nodeType":"282","messageId":"283","endLine":53,"endColumn":43},{"ruleId":"280","severity":1,"message":"281","line":70,"column":18,"nodeType":"282","messageId":"283","endLine":70,"endColumn":20},{"ruleId":"280","severity":1,"message":"281","line":86,"column":24,"nodeType":"282","messageId":"283","endLine":86,"endColumn":26},"@typescript-eslint/no-unused-vars","'camb' is assigned a value but never used.","Identifier","unusedVar","no-unused-vars","'IonButton' is defined but never used.","'IonImg' is defined but never used.","'IonFooter' is defined but never used.","'radioButtonOffOutline' is defined but never used.","'device' is assigned a value but never used.","'setDevice' is assigned a value but never used.","'presionado' is assigned a value but never used.","'interval' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'closed' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IonAlert' is defined but never used.","'IonTextarea' is defined but never used.","'useRef' is defined but never used.","'numbersToDataView' is defined but never used.","'useHistory' is defined but never used.","'CHAR_DIR_UUID' is assigned a value but never used.","'scanning' is assigned a value but never used.","'connectedDeviceId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startScan'. Either include it or remove the dependency array.","ArrayExpression",["306"],"'useState' is defined but never used.",["307"],"'IonLabel' is defined but never used.","'showImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedDate'. Either include it or remove the dependency array.",["308"],{"desc":"309","fix":"310"},{"desc":"309","fix":"311"},{"desc":"312","fix":"313"},"Update the dependencies array to be: [startScan]",{"range":"314","text":"315"},{"range":"316","text":"315"},"Update the dependencies array to be: [selectedDate]",{"range":"317","text":"318"},[2153,2155],"[startScan]",[2153,2155],[1899,1901],"[selectedDate]"]